/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './route/__root'
import { Route as IndexImport } from './route/index'
import { Route as BusinessBusinessKeyImport } from './route/business/$businessKey'

// Create Virtual Routes

const AdminLazyImport = createFileRoute('/admin')()
const BusinessIndexLazyImport = createFileRoute('/business/')()
const BusinessBusinessKeyServiceLazyImport = createFileRoute(
  '/business/$businessKey/service',
)()
const BusinessBusinessKeyProductLazyImport = createFileRoute(
  '/business/$businessKey/product',
)()
const BusinessBusinessKeyClientLazyImport = createFileRoute(
  '/business/$businessKey/client',
)()
const BusinessBusinessKeyInvoiceIndexLazyImport = createFileRoute(
  '/business/$businessKey/invoice/',
)()
const BusinessBusinessKeyInvoiceInvoiceKeyLazyImport = createFileRoute(
  '/business/$businessKey/invoice/$invoiceKey',
)()

// Create/Update Routes

const AdminLazyRoute = AdminLazyImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./route/admin.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const BusinessIndexLazyRoute = BusinessIndexLazyImport.update({
  path: '/business/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./route/business/index.lazy').then((d) => d.Route))

const BusinessBusinessKeyRoute = BusinessBusinessKeyImport.update({
  path: '/business/$businessKey',
  getParentRoute: () => rootRoute,
} as any)

const BusinessBusinessKeyServiceLazyRoute =
  BusinessBusinessKeyServiceLazyImport.update({
    path: '/service',
    getParentRoute: () => BusinessBusinessKeyRoute,
  } as any).lazy(() =>
    import('./route/business/$businessKey/service.lazy').then((d) => d.Route),
  )

const BusinessBusinessKeyProductLazyRoute =
  BusinessBusinessKeyProductLazyImport.update({
    path: '/product',
    getParentRoute: () => BusinessBusinessKeyRoute,
  } as any).lazy(() =>
    import('./route/business/$businessKey/product.lazy').then((d) => d.Route),
  )

const BusinessBusinessKeyClientLazyRoute =
  BusinessBusinessKeyClientLazyImport.update({
    path: '/client',
    getParentRoute: () => BusinessBusinessKeyRoute,
  } as any).lazy(() =>
    import('./route/business/$businessKey/client.lazy').then((d) => d.Route),
  )

const BusinessBusinessKeyInvoiceIndexLazyRoute =
  BusinessBusinessKeyInvoiceIndexLazyImport.update({
    path: '/invoice/',
    getParentRoute: () => BusinessBusinessKeyRoute,
  } as any).lazy(() =>
    import('./route/business/$businessKey/invoice/index.lazy').then(
      (d) => d.Route,
    ),
  )

const BusinessBusinessKeyInvoiceInvoiceKeyLazyRoute =
  BusinessBusinessKeyInvoiceInvoiceKeyLazyImport.update({
    path: '/invoice/$invoiceKey',
    getParentRoute: () => BusinessBusinessKeyRoute,
  } as any).lazy(() =>
    import('./route/business/$businessKey/invoice/$invoiceKey.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminLazyImport
      parentRoute: typeof rootRoute
    }
    '/business/$businessKey': {
      id: '/business/$businessKey'
      path: '/business/$businessKey'
      fullPath: '/business/$businessKey'
      preLoaderRoute: typeof BusinessBusinessKeyImport
      parentRoute: typeof rootRoute
    }
    '/business/': {
      id: '/business/'
      path: '/business'
      fullPath: '/business'
      preLoaderRoute: typeof BusinessIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/business/$businessKey/client': {
      id: '/business/$businessKey/client'
      path: '/client'
      fullPath: '/business/$businessKey/client'
      preLoaderRoute: typeof BusinessBusinessKeyClientLazyImport
      parentRoute: typeof BusinessBusinessKeyImport
    }
    '/business/$businessKey/product': {
      id: '/business/$businessKey/product'
      path: '/product'
      fullPath: '/business/$businessKey/product'
      preLoaderRoute: typeof BusinessBusinessKeyProductLazyImport
      parentRoute: typeof BusinessBusinessKeyImport
    }
    '/business/$businessKey/service': {
      id: '/business/$businessKey/service'
      path: '/service'
      fullPath: '/business/$businessKey/service'
      preLoaderRoute: typeof BusinessBusinessKeyServiceLazyImport
      parentRoute: typeof BusinessBusinessKeyImport
    }
    '/business/$businessKey/invoice/$invoiceKey': {
      id: '/business/$businessKey/invoice/$invoiceKey'
      path: '/invoice/$invoiceKey'
      fullPath: '/business/$businessKey/invoice/$invoiceKey'
      preLoaderRoute: typeof BusinessBusinessKeyInvoiceInvoiceKeyLazyImport
      parentRoute: typeof BusinessBusinessKeyImport
    }
    '/business/$businessKey/invoice/': {
      id: '/business/$businessKey/invoice/'
      path: '/invoice'
      fullPath: '/business/$businessKey/invoice'
      preLoaderRoute: typeof BusinessBusinessKeyInvoiceIndexLazyImport
      parentRoute: typeof BusinessBusinessKeyImport
    }
  }
}

// Create and export the route tree

interface BusinessBusinessKeyRouteChildren {
  BusinessBusinessKeyClientLazyRoute: typeof BusinessBusinessKeyClientLazyRoute
  BusinessBusinessKeyProductLazyRoute: typeof BusinessBusinessKeyProductLazyRoute
  BusinessBusinessKeyServiceLazyRoute: typeof BusinessBusinessKeyServiceLazyRoute
  BusinessBusinessKeyInvoiceInvoiceKeyLazyRoute: typeof BusinessBusinessKeyInvoiceInvoiceKeyLazyRoute
  BusinessBusinessKeyInvoiceIndexLazyRoute: typeof BusinessBusinessKeyInvoiceIndexLazyRoute
}

const BusinessBusinessKeyRouteChildren: BusinessBusinessKeyRouteChildren = {
  BusinessBusinessKeyClientLazyRoute: BusinessBusinessKeyClientLazyRoute,
  BusinessBusinessKeyProductLazyRoute: BusinessBusinessKeyProductLazyRoute,
  BusinessBusinessKeyServiceLazyRoute: BusinessBusinessKeyServiceLazyRoute,
  BusinessBusinessKeyInvoiceInvoiceKeyLazyRoute:
    BusinessBusinessKeyInvoiceInvoiceKeyLazyRoute,
  BusinessBusinessKeyInvoiceIndexLazyRoute:
    BusinessBusinessKeyInvoiceIndexLazyRoute,
}

const BusinessBusinessKeyRouteWithChildren =
  BusinessBusinessKeyRoute._addFileChildren(BusinessBusinessKeyRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminLazyRoute
  '/business/$businessKey': typeof BusinessBusinessKeyRouteWithChildren
  '/business': typeof BusinessIndexLazyRoute
  '/business/$businessKey/client': typeof BusinessBusinessKeyClientLazyRoute
  '/business/$businessKey/product': typeof BusinessBusinessKeyProductLazyRoute
  '/business/$businessKey/service': typeof BusinessBusinessKeyServiceLazyRoute
  '/business/$businessKey/invoice/$invoiceKey': typeof BusinessBusinessKeyInvoiceInvoiceKeyLazyRoute
  '/business/$businessKey/invoice': typeof BusinessBusinessKeyInvoiceIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminLazyRoute
  '/business/$businessKey': typeof BusinessBusinessKeyRouteWithChildren
  '/business': typeof BusinessIndexLazyRoute
  '/business/$businessKey/client': typeof BusinessBusinessKeyClientLazyRoute
  '/business/$businessKey/product': typeof BusinessBusinessKeyProductLazyRoute
  '/business/$businessKey/service': typeof BusinessBusinessKeyServiceLazyRoute
  '/business/$businessKey/invoice/$invoiceKey': typeof BusinessBusinessKeyInvoiceInvoiceKeyLazyRoute
  '/business/$businessKey/invoice': typeof BusinessBusinessKeyInvoiceIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminLazyRoute
  '/business/$businessKey': typeof BusinessBusinessKeyRouteWithChildren
  '/business/': typeof BusinessIndexLazyRoute
  '/business/$businessKey/client': typeof BusinessBusinessKeyClientLazyRoute
  '/business/$businessKey/product': typeof BusinessBusinessKeyProductLazyRoute
  '/business/$businessKey/service': typeof BusinessBusinessKeyServiceLazyRoute
  '/business/$businessKey/invoice/$invoiceKey': typeof BusinessBusinessKeyInvoiceInvoiceKeyLazyRoute
  '/business/$businessKey/invoice/': typeof BusinessBusinessKeyInvoiceIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/business/$businessKey'
    | '/business'
    | '/business/$businessKey/client'
    | '/business/$businessKey/product'
    | '/business/$businessKey/service'
    | '/business/$businessKey/invoice/$invoiceKey'
    | '/business/$businessKey/invoice'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/business/$businessKey'
    | '/business'
    | '/business/$businessKey/client'
    | '/business/$businessKey/product'
    | '/business/$businessKey/service'
    | '/business/$businessKey/invoice/$invoiceKey'
    | '/business/$businessKey/invoice'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/business/$businessKey'
    | '/business/'
    | '/business/$businessKey/client'
    | '/business/$businessKey/product'
    | '/business/$businessKey/service'
    | '/business/$businessKey/invoice/$invoiceKey'
    | '/business/$businessKey/invoice/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminLazyRoute: typeof AdminLazyRoute
  BusinessBusinessKeyRoute: typeof BusinessBusinessKeyRouteWithChildren
  BusinessIndexLazyRoute: typeof BusinessIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminLazyRoute: AdminLazyRoute,
  BusinessBusinessKeyRoute: BusinessBusinessKeyRouteWithChildren,
  BusinessIndexLazyRoute: BusinessIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/business/$businessKey",
        "/business/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin.lazy.tsx"
    },
    "/business/$businessKey": {
      "filePath": "business/$businessKey.tsx",
      "children": [
        "/business/$businessKey/client",
        "/business/$businessKey/product",
        "/business/$businessKey/service",
        "/business/$businessKey/invoice/$invoiceKey",
        "/business/$businessKey/invoice/"
      ]
    },
    "/business/": {
      "filePath": "business/index.lazy.tsx"
    },
    "/business/$businessKey/client": {
      "filePath": "business/$businessKey/client.lazy.tsx",
      "parent": "/business/$businessKey"
    },
    "/business/$businessKey/product": {
      "filePath": "business/$businessKey/product.lazy.tsx",
      "parent": "/business/$businessKey"
    },
    "/business/$businessKey/service": {
      "filePath": "business/$businessKey/service.lazy.tsx",
      "parent": "/business/$businessKey"
    },
    "/business/$businessKey/invoice/$invoiceKey": {
      "filePath": "business/$businessKey/invoice/$invoiceKey.lazy.tsx",
      "parent": "/business/$businessKey"
    },
    "/business/$businessKey/invoice/": {
      "filePath": "business/$businessKey/invoice/index.lazy.tsx",
      "parent": "/business/$businessKey"
    }
  }
}
ROUTE_MANIFEST_END */
