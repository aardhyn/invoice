/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './route/__root'
import { Route as IndexImport } from './route/index'

// Create Virtual Routes

const InvoiceLazyImport = createFileRoute('/invoice')()
const ClientLazyImport = createFileRoute('/client')()
const BusinessLazyImport = createFileRoute('/business')()
const AdminLazyImport = createFileRoute('/admin')()

// Create/Update Routes

const InvoiceLazyRoute = InvoiceLazyImport.update({
  path: '/invoice',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./route/invoice.lazy').then((d) => d.Route))

const ClientLazyRoute = ClientLazyImport.update({
  path: '/client',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./route/client.lazy').then((d) => d.Route))

const BusinessLazyRoute = BusinessLazyImport.update({
  path: '/business',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./route/business.lazy').then((d) => d.Route))

const AdminLazyRoute = AdminLazyImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./route/admin.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminLazyImport
      parentRoute: typeof rootRoute
    }
    '/business': {
      id: '/business'
      path: '/business'
      fullPath: '/business'
      preLoaderRoute: typeof BusinessLazyImport
      parentRoute: typeof rootRoute
    }
    '/client': {
      id: '/client'
      path: '/client'
      fullPath: '/client'
      preLoaderRoute: typeof ClientLazyImport
      parentRoute: typeof rootRoute
    }
    '/invoice': {
      id: '/invoice'
      path: '/invoice'
      fullPath: '/invoice'
      preLoaderRoute: typeof InvoiceLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminLazyRoute
  '/business': typeof BusinessLazyRoute
  '/client': typeof ClientLazyRoute
  '/invoice': typeof InvoiceLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminLazyRoute
  '/business': typeof BusinessLazyRoute
  '/client': typeof ClientLazyRoute
  '/invoice': typeof InvoiceLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminLazyRoute
  '/business': typeof BusinessLazyRoute
  '/client': typeof ClientLazyRoute
  '/invoice': typeof InvoiceLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/admin' | '/business' | '/client' | '/invoice'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/admin' | '/business' | '/client' | '/invoice'
  id: '__root__' | '/' | '/admin' | '/business' | '/client' | '/invoice'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminLazyRoute: typeof AdminLazyRoute
  BusinessLazyRoute: typeof BusinessLazyRoute
  ClientLazyRoute: typeof ClientLazyRoute
  InvoiceLazyRoute: typeof InvoiceLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminLazyRoute: AdminLazyRoute,
  BusinessLazyRoute: BusinessLazyRoute,
  ClientLazyRoute: ClientLazyRoute,
  InvoiceLazyRoute: InvoiceLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/business",
        "/client",
        "/invoice"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin.lazy.tsx"
    },
    "/business": {
      "filePath": "business.lazy.tsx"
    },
    "/client": {
      "filePath": "client.lazy.tsx"
    },
    "/invoice": {
      "filePath": "invoice.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
